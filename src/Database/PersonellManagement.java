/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Database;
import com.sun.jdi.connect.spi.Connection;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import javax.swing.table.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
        
/**
 *
 * @author Citrine
 */
public class PersonellManagement extends javax.swing.JFrame {
    
    private int CurPersID = 0;
    private int Row = 0;

    private PersonellManagement() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    private void Center() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }
    
    private void EmptyForm() {
        LNameField.setText("Nama Belakang");
        FNameField.setText("Nama Utama");
        EmailField.setText("Email");
        PhoneNoField.setText("Nomor HP");
        ID.setText("ID Personalia");
        SalaryField.setText("Gaji");
        UsernameField.setText("Username");
        PassField.setText("Password");
        BoxField.setSelected(false);
        LNameField.setForeground(new Color(204, 204, 204));
        FNameField.setForeground(new Color(204, 204, 204));
        EmailField.setForeground(new Color(204, 204, 204));
        PhoneNoField.setForeground(new Color(204, 204, 204));
        ID.setForeground(new Color(204, 204, 204));
        SalaryField.setForeground(new Color(204, 204, 204));
        UsernameField.setForeground(new Color(204, 204, 204));
        PassField.setForeground(new Color(204, 204, 204));
        
    }
    
    private void Show_Data(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nama Utama");
        model.addColumn("Nama Belakang");
        model.addColumn("Posisi");
        model.addColumn("Phone");
        model.addColumn("Email");
        model.addColumn("Gaji");
        model.addColumn("Username");
        model.addColumn("Password");
        Table.setModel(model);
        
        try {
            String SelStm = "SELECT * FROM Personnel";
            java.sql.Connection conn = Config.ConfigDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(SelStm);
            
            while(res.next()) {
                model.addRow(new Object[]{res.getString(1), res.getString(2),
                        res.getString(3), res.getString(4), res.getString(5),
                            res.getString(6), res.getString(7), res.getString(8),
                            res.getString(9)});
            }
            
            Table.setModel(model);
            
        } catch(SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
    
    private void Show_DataStm(String SelStm){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nama Utama");
        model.addColumn("Nama Belakang");
        model.addColumn("Posisi");
        model.addColumn("Phone");
        model.addColumn("Email");
        model.addColumn("Gaji");
        model.addColumn("Username");
        model.addColumn("Password");
        Table.setModel(model);
        
        try {
            java.sql.Connection conn = Config.ConfigDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(SelStm);
            
            while(res.next()) {
                model.addRow(new Object[]{res.getString(1), res.getString(2),
                        res.getString(3), res.getString(4), res.getString(5),
                            res.getString(6), res.getString(7), res.getString(8),
                            res.getString(9)});
            }
            
            Table.setModel(model);
            
        } catch(SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
    
    public PersonellManagement(int PersID) {
        initComponents();
        Center();
        Show_Data();
        EmptyForm();
        this.CurPersID = PersID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PersonnellID = new javax.swing.JLabel();
        Title = new javax.swing.JLabel();
        LName = new javax.swing.JLabel();
        FName = new javax.swing.JLabel();
        Pass = new javax.swing.JLabel();
        Salary = new javax.swing.JLabel();
        Username = new javax.swing.JLabel();
        PhoneNo = new javax.swing.JLabel();
        AdminPerms = new javax.swing.JLabel();
        Email = new javax.swing.JLabel();
        TablePane = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        ID = new javax.swing.JTextField();
        FNameField = new javax.swing.JTextField();
        LNameField = new javax.swing.JTextField();
        PhoneNoField = new javax.swing.JTextField();
        EmailField = new javax.swing.JTextField();
        SalaryField = new javax.swing.JTextField();
        UsernameField = new javax.swing.JTextField();
        PassField = new javax.swing.JTextField();
        BoxField = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        ASMRSign = new javax.swing.JLabel();
        Cancel = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        AddData = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        ASMRLogo = new javax.swing.JLabel();
        SearchBox = new javax.swing.JCheckBox();
        Search = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(950, 756));
        setResizable(false);
        getContentPane().setLayout(null);

        PersonnellID.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        PersonnellID.setText("ID Personalia");
        PersonnellID.setPreferredSize(new java.awt.Dimension(118, 26));
        getContentPane().add(PersonnellID);
        PersonnellID.setBounds(84, 73, 155, 26);

        Title.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        Title.setText("Personalia");
        getContentPane().add(Title);
        Title.setBounds(400, 10, 116, 34);

        LName.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        LName.setText("Nama Belakang");
        LName.setMaximumSize(new java.awt.Dimension(118, 26));
        LName.setMinimumSize(new java.awt.Dimension(118, 26));
        LName.setPreferredSize(new java.awt.Dimension(118, 26));
        getContentPane().add(LName);
        LName.setBounds(84, 137, 155, 26);

        FName.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        FName.setText("Nama Utama");
        FName.setMaximumSize(new java.awt.Dimension(118, 26));
        FName.setMinimumSize(new java.awt.Dimension(118, 26));
        FName.setPreferredSize(new java.awt.Dimension(118, 26));
        getContentPane().add(FName);
        FName.setBounds(84, 105, 155, 26);

        Pass.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        Pass.setText("Password");
        Pass.setMaximumSize(new java.awt.Dimension(118, 26));
        Pass.setMinimumSize(new java.awt.Dimension(118, 26));
        getContentPane().add(Pass);
        Pass.setBounds(84, 297, 164, 26);

        Salary.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        Salary.setText("Gaji");
        Salary.setMaximumSize(new java.awt.Dimension(118, 26));
        Salary.setMinimumSize(new java.awt.Dimension(118, 26));
        getContentPane().add(Salary);
        Salary.setBounds(84, 233, 183, 26);

        Username.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        Username.setText("Username");
        Username.setMaximumSize(new java.awt.Dimension(118, 26));
        Username.setMinimumSize(new java.awt.Dimension(118, 26));
        getContentPane().add(Username);
        Username.setBounds(84, 265, 164, 26);

        PhoneNo.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        PhoneNo.setText("Nomor HP");
        PhoneNo.setMaximumSize(new java.awt.Dimension(118, 26));
        PhoneNo.setMinimumSize(new java.awt.Dimension(118, 26));
        PhoneNo.setPreferredSize(new java.awt.Dimension(118, 26));
        getContentPane().add(PhoneNo);
        PhoneNo.setBounds(84, 169, 183, 26);

        AdminPerms.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        AdminPerms.setText("Izin Admin");
        getContentPane().add(AdminPerms);
        AdminPerms.setBounds(84, 329, 197, 26);

        Email.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        Email.setText("Email");
        getContentPane().add(Email);
        Email.setBounds(84, 201, 183, 26);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        TablePane.setViewportView(Table);

        getContentPane().add(TablePane);
        TablePane.setBounds(84, 420, 769, 168);

        ID.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        ID.setForeground(new java.awt.Color(204, 204, 204));
        ID.setText("ID Personalia");
        ID.setEnabled(false);
        ID.setFocusable(false);
        ID.setMaximumSize(new java.awt.Dimension(125, 26));
        ID.setMinimumSize(new java.awt.Dimension(125, 26));
        ID.setPreferredSize(new java.awt.Dimension(125, 26));
        ID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                IDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                IDFocusLost(evt);
            }
        });
        getContentPane().add(ID);
        ID.setBounds(282, 73, 570, 26);

        FNameField.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        FNameField.setForeground(new java.awt.Color(204, 204, 204));
        FNameField.setText("Nama Utama");
        FNameField.setMaximumSize(new java.awt.Dimension(125, 26));
        FNameField.setMinimumSize(new java.awt.Dimension(125, 26));
        FNameField.setName(""); // NOI18N
        FNameField.setPreferredSize(new java.awt.Dimension(125, 26));
        FNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                FNameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                FNameFieldFocusLost(evt);
            }
        });
        getContentPane().add(FNameField);
        FNameField.setBounds(282, 105, 570, 26);

        LNameField.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        LNameField.setForeground(new java.awt.Color(204, 204, 204));
        LNameField.setText("Nama Belakang");
        LNameField.setMaximumSize(new java.awt.Dimension(125, 26));
        LNameField.setMinimumSize(new java.awt.Dimension(125, 26));
        LNameField.setPreferredSize(new java.awt.Dimension(125, 26));
        LNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                LNameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                LNameFieldFocusLost(evt);
            }
        });
        getContentPane().add(LNameField);
        LNameField.setBounds(282, 137, 570, 26);

        PhoneNoField.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        PhoneNoField.setForeground(new java.awt.Color(204, 204, 204));
        PhoneNoField.setText("Nomor HP");
        PhoneNoField.setMaximumSize(new java.awt.Dimension(125, 26));
        PhoneNoField.setMinimumSize(new java.awt.Dimension(125, 26));
        PhoneNoField.setPreferredSize(new java.awt.Dimension(125, 26));
        PhoneNoField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PhoneNoFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PhoneNoFieldFocusLost(evt);
            }
        });
        getContentPane().add(PhoneNoField);
        PhoneNoField.setBounds(282, 169, 570, 26);

        EmailField.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        EmailField.setForeground(new java.awt.Color(204, 204, 204));
        EmailField.setText("Email");
        EmailField.setMaximumSize(new java.awt.Dimension(125, 26));
        EmailField.setMinimumSize(new java.awt.Dimension(125, 26));
        EmailField.setPreferredSize(new java.awt.Dimension(125, 26));
        EmailField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                EmailFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                EmailFieldFocusLost(evt);
            }
        });
        getContentPane().add(EmailField);
        EmailField.setBounds(282, 201, 570, 26);

        SalaryField.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        SalaryField.setForeground(new java.awt.Color(204, 204, 204));
        SalaryField.setText("Gaji");
        SalaryField.setMaximumSize(new java.awt.Dimension(125, 26));
        SalaryField.setMinimumSize(new java.awt.Dimension(125, 26));
        SalaryField.setPreferredSize(new java.awt.Dimension(125, 26));
        SalaryField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SalaryFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SalaryFieldFocusLost(evt);
            }
        });
        getContentPane().add(SalaryField);
        SalaryField.setBounds(282, 233, 570, 26);

        UsernameField.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        UsernameField.setForeground(new java.awt.Color(204, 204, 204));
        UsernameField.setText("Username");
        UsernameField.setMaximumSize(new java.awt.Dimension(125, 26));
        UsernameField.setMinimumSize(new java.awt.Dimension(125, 26));
        UsernameField.setPreferredSize(new java.awt.Dimension(125, 26));
        UsernameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                UsernameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                UsernameFieldFocusLost(evt);
            }
        });
        getContentPane().add(UsernameField);
        UsernameField.setBounds(282, 265, 570, 26);

        PassField.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        PassField.setForeground(new java.awt.Color(204, 204, 204));
        PassField.setText("Password");
        PassField.setMaximumSize(new java.awt.Dimension(125, 26));
        PassField.setMinimumSize(new java.awt.Dimension(125, 26));
        PassField.setPreferredSize(new java.awt.Dimension(125, 26));
        PassField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PassFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PassFieldFocusLost(evt);
            }
        });
        getContentPane().add(PassField);
        PassField.setBounds(282, 297, 570, 26);

        BoxField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxFieldActionPerformed(evt);
            }
        });
        getContentPane().add(BoxField);
        BoxField.setBounds(282, 329, 106, 26);

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jSeparator1.setPreferredSize(new java.awt.Dimension(20000, 2));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 606, 20000, 2);

        ASMRSign.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        ASMRSign.setText("A.S.M.R Advanced Store Management Repository by Goomers Inc. 1993 TM");
        getContentPane().add(ASMRSign);
        ASMRSign.setBounds(270, 680, 553, 34);

        Cancel.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });
        getContentPane().add(Cancel);
        Cancel.setBounds(270, 370, 110, 29);

        Edit.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        Edit.setText("Edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });
        getContentPane().add(Edit);
        Edit.setBounds(420, 370, 61, 29);

        Delete.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        Delete.setText("Hapus");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        getContentPane().add(Delete);
        Delete.setBounds(620, 370, 80, 29);

        AddData.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        AddData.setText("Tambah");
        AddData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDataActionPerformed(evt);
            }
        });
        getContentPane().add(AddData);
        AddData.setBounds(100, 370, 140, 29);

        Exit.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        Exit.setText("Kembali");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        getContentPane().add(Exit);
        Exit.setBounds(740, 370, 90, 29);

        ASMRLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logo2.png"))); // NOI18N
        getContentPane().add(ASMRLogo);
        ASMRLogo.setBounds(10, 610, 230, 120);

        SearchBox.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        SearchBox.setText("Cari");
        SearchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBoxActionPerformed(evt);
            }
        });
        getContentPane().add(SearchBox);
        SearchBox.setBounds(860, 70, 79, 30);

        Search.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        Search.setText("Cari");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        getContentPane().add(Search);
        Search.setBounds(520, 370, 61, 29);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BoxFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoxFieldActionPerformed

    private void IDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IDFocusGained
        if(ID.getText().equals("ID Personalia")) {
            ID.setText("");
            ID.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_IDFocusGained

    private void IDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IDFocusLost
        if(ID.getText().equals("")) {
            ID.setText("ID Personalia");
            ID.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_IDFocusLost

    private void FNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FNameFieldFocusGained
        if(FNameField.getText().equals("Nama Utama")) {
            FNameField.setText("");
            FNameField.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_FNameFieldFocusGained

    private void FNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FNameFieldFocusLost
        if(FNameField.getText().equals("")) {
            FNameField.setText("Nama Utama");
            FNameField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_FNameFieldFocusLost

    private void LNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LNameFieldFocusGained
        if(LNameField.getText().equals("Nama Belakang")) {
            LNameField.setText("");
            LNameField.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_LNameFieldFocusGained

    private void LNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LNameFieldFocusLost
        if(LNameField.getText().equals("")) {
            LNameField.setText("Nama Belakang");
            LNameField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_LNameFieldFocusLost

    private void PhoneNoFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PhoneNoFieldFocusLost
        if(PhoneNoField.getText().equals("")) {
            PhoneNoField.setText("Nomor HP");
            PhoneNoField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_PhoneNoFieldFocusLost

    private void PhoneNoFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PhoneNoFieldFocusGained
        if(PhoneNoField.getText().equals("Nomor HP")) {
            PhoneNoField.setText("");
            PhoneNoField.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_PhoneNoFieldFocusGained

    private void EmailFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailFieldFocusGained
        if(EmailField.getText().equals("Email")) {
            EmailField.setText("");
            EmailField.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_EmailFieldFocusGained

    private void EmailFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailFieldFocusLost
        if(EmailField.getText().equals("")) {
            EmailField.setText("Email");
            EmailField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_EmailFieldFocusLost

    private void SalaryFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SalaryFieldFocusGained
        if(SalaryField.getText().equals("Gaji")) {
            SalaryField.setText("");
            SalaryField.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_SalaryFieldFocusGained

    private void SalaryFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SalaryFieldFocusLost
        if(SalaryField.getText().equals("")) {
            SalaryField.setText("Gaji");
            SalaryField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_SalaryFieldFocusLost

    private void UsernameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UsernameFieldFocusGained
        if(UsernameField.getText().equals("Username")) {
            UsernameField.setText("");
            UsernameField.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_UsernameFieldFocusGained

    private void UsernameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UsernameFieldFocusLost
        if(UsernameField.getText().equals("")) {
            UsernameField.setText("Username");
            UsernameField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_UsernameFieldFocusLost

    private void PassFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PassFieldFocusGained
        if(PassField.getText().equals("Password")) {
            PassField.setText("");
            PassField.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_PassFieldFocusGained

    private void PassFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PassFieldFocusLost
        if(PassField.getText().equals("")) {
            PassField.setText("Password");
            PassField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_PassFieldFocusLost

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        this.setVisible(false);
        AdminMM Admin = new AdminMM(this.CurPersID);
        Admin.setVisible(true);
    }//GEN-LAST:event_ExitActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        EmptyForm();
        Show_Data();
    }//GEN-LAST:event_CancelActionPerformed

    private void AddDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDataActionPerformed
        String Password = CryptWithMD5.cryptWithMD5(PassField.getText());
        
        List<String> Stms = new ArrayList<>(Arrays.asList("'"+ ID.getText() + "',",
                "'"+ FNameField.getText() + "',", "'"+ LNameField.getText() + "',",
                "'" + PhoneNoField.getText() + "',", "'" + EmailField.getText() + "',",
                "'" + SalaryField.getText() + "',", "'" + UsernameField.getText() + "',",
                "'" + Password + "',"));
        List<String> Checks = List.of("ID Personalia", "Nama Utama", "Nama Belakang", "Nomor HP", "Email", "Gaji", "Username", "Password");
        List<javax.swing.JTextField> Fields = List.of(ID, FNameField, LNameField, PhoneNoField, EmailField, SalaryField, UsernameField, PassField);
        
        String Permissions;
        if(BoxField.isSelected()) {
            Permissions = "admin";
        } else {
            Permissions = "not admin";
        }
        
        for(int i = 0; i < Fields.size(); i++) {
            if(Fields.get(i).getText().equals(Checks.get(i))) {
                Stms.set(i, "NULL,");
            }
        }
        
        if(Stms.get(1).equals("NULL,") || Stms.get(6).equals("NULL,") || Stms.get(7).equals("NULL,")) {
            JOptionPane.showMessageDialog(null, "Please fill in First Name, Username and Password fields before proceeding");
        } else {
            try {
                String stm = "INSERT INTO Personnel VALUES (";      
                for(int i = 0; i < Fields.size(); i++) {
                    if(i == 2) {
                        stm += Stms.get(i) + "'" + Permissions + "',";
                    } else {
                        stm += Stms.get(i);
                    } 
                }
                stm = stm.substring(0,stm.length() - 1) + ");";
                
                System.out.println(stm);
                java.sql.Connection conn = Config.ConfigDB();
                conn.setAutoCommit(false);    
                java.sql.PreparedStatement pstm = conn.prepareStatement(stm);
                pstm.execute();
                conn.commit();
                JOptionPane.showMessageDialog(null, "Changes have been saved");
                Show_Data();
                EmptyForm();
            } catch(HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
        

    }//GEN-LAST:event_AddDataActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        List<String> Checks = List.of("ID Personalia", "Nama Utama", "Nama Belakang", "Nomor HP", "Email", "Gaji", "Username", "Password");
        List<javax.swing.JTextField> Fields = List.of(ID, FNameField, LNameField, PhoneNoField, EmailField, SalaryField, UsernameField, PassField);
        int row = Table.rowAtPoint(evt.getPoint());
        this.Row = row;
        
        for(int i = 0; i < Fields.size(); i++) {
            if(i == 3) {
                if(Table.getValueAt(row, 3).toString().equals("admin")) {
                    BoxField.setSelected(true);
                } else {
                    BoxField.setSelected(false);
                }
                if(Table.getValueAt(row, i+1) != null) {
                    Fields.get(i).setText(Table.getValueAt(row, i+1).toString());
                    Fields.get(i).setForeground(new Color(0, 0, 0));
                } else {
                    Fields.get(i).setText(Checks.get(i));
                    Fields.get(i).setForeground(new Color(204, 204, 204));
                }
                
            } else if(i > 3) {
                if(Table.getValueAt(row, i+1) != null) {
                    Fields.get(i).setText(Table.getValueAt(row, i+1).toString());
                    Fields.get(i).setForeground(new Color(0, 0, 0));
                } else {
                    Fields.get(i).setText(Checks.get(i));
                    Fields.get(i).setForeground(new Color(204, 204, 204));
                };   
            } else {
                if(Table.getValueAt(row, i) != null) {
                    Fields.get(i).setText(Table.getValueAt(row, i).toString());
                    Fields.get(i).setForeground(new Color(0, 0, 0)); 
                } else {
                    Fields.get(i).setText(Checks.get(i));
                    Fields.get(i).setForeground(new Color(204, 204, 204));
                }
                  
            }
        }
    }//GEN-LAST:event_TableMouseClicked

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        String Password = "";
        if(Table.getValueAt(this.Row, 8).toString().equals(PassField.getText())) {
            Password = Table.getValueAt(this.Row, 8).toString();
        } else {
            Password = CryptWithMD5.cryptWithMD5(PassField.getText());
        }
        
        
        List<String> Stms = new ArrayList<>(Arrays.asList("PersonnelID='"+ ID.getText() + "',",
                "FirstName='"+ FNameField.getText() + "',", "LastName='"+ LNameField.getText() + "',",
                "PhoneNo='" + PhoneNoField.getText() + "',", "Email='" + EmailField.getText() + "',",
                "Salary='" + SalaryField.getText() + "',", "Username='" + UsernameField.getText() + "',",
                "Password='" + Password + "',"));
        List<String> Checks = List.of("ID Personalia", "Nama Utama", "Nama Belakang", "Nomor HP", "Email", "Gaji", "Username", "Password");
        List<javax.swing.JTextField> Fields = List.of(ID, FNameField, LNameField, PhoneNoField, EmailField, SalaryField, UsernameField, PassField);
        
        String Permissions;
        if(BoxField.isSelected()) {
            Permissions = "Position= 'admin',";
        } else {
            Permissions = "Position= 'not admin',";
        }
        
        for(int i = 0; i < Fields.size(); i++) {
            if(Fields.get(i).getText().equals(Checks.get(i))) {
                Stms.set(i, "");
            }
        }
        
        if(Stms.get(1).equals("NULL,") || Stms.get(6).equals("NULL,") || Stms.get(7).equals("NULL,")) {
            JOptionPane.showMessageDialog(null, "Please fill in First Name, Username and Password fields before proceeding");
        } else {
            try {
                String stm = "UPDATE Personnel SET ";      
                for(int i = 0; i < Fields.size(); i++) {
                    if(i == 2) {
                        stm += Stms.get(i) + Permissions;
                    } else {
                        stm += Stms.get(i);
                    } 
                }
                stm = stm.substring(0,stm.length() - 1) + " WHERE PersonnelID='" + ID.getText() + "';";
                System.out.println(stm);
                
                java.sql.Connection conn = Config.ConfigDB();
                conn.setAutoCommit(false);
                java.sql.PreparedStatement pstm = conn.prepareStatement(stm);
                pstm.execute();
                conn.commit();
                JOptionPane.showMessageDialog(null, "Edit successful");
                Show_Data();
                EmptyForm();
            } catch(HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_EditActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        if(ID.getText().equals("ID Personalia") || FNameField.getText().equals("Nama Utama") ||
                UsernameField.getText().equals("Username") || PassField.getText().equals("Password")) {
            
            JOptionPane.showMessageDialog(null, "Please fill in all fields before proceeding");
        } else {
            try {
                String stm = "DELETE FROM Personnel WHERE PersonnelID='" + ID.getText() + "';";
                
                java.sql.Connection conn = Config.ConfigDB();
                conn.setAutoCommit(false);
                java.sql.PreparedStatement pstm = conn.prepareStatement(stm);
                pstm.execute();
                conn.commit();
                JOptionPane.showMessageDialog(null, "Delete successful");
                Show_Data();
                EmptyForm();
            } catch(HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        int FieldsFilled = 0;
        
        List<String> Stms = new ArrayList<>(Arrays.asList("PersonnelID LIKE '%" + ID.getText() + "%',", "FirstName LIKE '%" + FNameField.getText() + "%',",
                "LastName LIKE '%" + LNameField.getText() + "%',", "PhoneNo LIKE '%" + PhoneNoField.getText() + "%',", 
                "Email LIKE '%" + EmailField.getText() + "%',", "Salary LIKE '%" + SalaryField.getText() + "%',", "Username LIKE '%" + UsernameField.getText() + "%',",
                "Password LIKE '%" + PassField.getText() + "%',"));
        List<javax.swing.JTextField> Fields = List.of(ID, FNameField, LNameField, PhoneNoField, EmailField, SalaryField, UsernameField, PassField);
        List<String> Checks = List.of("ID Personalia", "Nama Utama", "Nama Belakang", "Nomor HP", "Email", "Gaji", "Username", "Password");
        
        for(int i = 0; i < Fields.size(); i++) {
            if(Fields.get(i).getText().equals(Checks.get(i))) {
                Stms.set(i, "");
            } else{
                FieldsFilled++;
            }
        }
        
        
        if(FieldsFilled <= 0) {
            JOptionPane.showMessageDialog(null, "Please fill in at least one field");
        
        } else {
            try {
                String stm = "SELECT * FROM Personnel WHERE ";      
                    stm = Stms.stream().map((i) -> i).reduce(stm, String::concat);
                    stm = stm.substring(0,stm.length() - 1) + ";";
                
                java.sql.Connection conn = Config.ConfigDB();
                conn.setAutoCommit(false);
                java.sql.PreparedStatement pstm = conn.prepareStatement(stm);
                pstm.execute();
                conn.commit();
                Show_DataStm(stm);
                EmptyForm();
            } catch(HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void SearchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBoxActionPerformed
        if(SearchBox.isSelected()) {
            ID.setEnabled(true);
            ID.setFocusable(true);
        } else {
            ID.setEnabled(false);
            ID.setFocusable(false);
        }
    }//GEN-LAST:event_SearchBoxActionPerformed
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserMM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserMM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserMM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserMM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonellManagement().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ASMRLogo;
    private javax.swing.JLabel ASMRSign;
    private javax.swing.JButton AddData;
    private javax.swing.JLabel AdminPerms;
    private javax.swing.JCheckBox BoxField;
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JLabel Email;
    private javax.swing.JTextField EmailField;
    private javax.swing.JButton Exit;
    private javax.swing.JLabel FName;
    private javax.swing.JTextField FNameField;
    private javax.swing.JTextField ID;
    private javax.swing.JLabel LName;
    private javax.swing.JTextField LNameField;
    private javax.swing.JLabel Pass;
    private javax.swing.JTextField PassField;
    private javax.swing.JLabel PersonnellID;
    private javax.swing.JLabel PhoneNo;
    private javax.swing.JTextField PhoneNoField;
    private javax.swing.JLabel Salary;
    private javax.swing.JTextField SalaryField;
    private javax.swing.JButton Search;
    private javax.swing.JCheckBox SearchBox;
    private javax.swing.JTable Table;
    private javax.swing.JScrollPane TablePane;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel Username;
    private javax.swing.JTextField UsernameField;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
