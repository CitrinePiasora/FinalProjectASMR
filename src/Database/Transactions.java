/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Database;
import com.sun.jdi.connect.spi.Connection;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import javax.swing.table.*;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
        
/**
 *
 * @author Citrine
 */
public class Transactions extends javax.swing.JFrame {
    
    private int CurPersID = 0;
    private int rowToDel = 0;

    private Transactions() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    private void Center() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }
    
    private void EmptyForm() {
        PersonnelName.setText("ID Personalia");
        TIDField.setText("ID Transaksi");
        TIDField.setForeground(new Color(204, 204, 204));
        PersonnelName.setForeground(new Color(204, 204, 204));
    }
    
    private void Show_Data(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Transaksi");
        model.addColumn("ID Personalia");
        model.addColumn("Nama Utama");
        model.addColumn("Total");
        model.addColumn("Tanggal/Waktu");
        TransactionIDTables.setModel(model);
        
        try {
            String SelStm = "SELECT * FROM Transaction";
            java.sql.Connection conn = Config.ConfigDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(SelStm);
            
            while(res.next()) {
                model.addRow(new Object[]{res.getString(1), res.getString(2),
                        res.getString(3), res.getString(4), res.getString(5)});
            }
            
            TransactionIDTables.setModel(model);
            
        } catch(SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
    
    private void Show_DataStm(String SelStm){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Transaksi");
        model.addColumn("ID Personalia");
        model.addColumn("Nama Utama");
        model.addColumn("Total");
        model.addColumn("Tanggal/Waktu");
        TransactionIDTables.setModel(model);
        
        try {
            java.sql.Connection conn = Config.ConfigDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(SelStm);
            
            while(res.next()) {
                model.addRow(new Object[]{res.getString(1), res.getString(2),
                        res.getString(3), res.getString(4), res.getString(5)});
            }
            
            TransactionIDTables.setModel(model);
            
        } catch(SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
    
    public Transactions(int PersID) {
        initComponents();
        Center();
        Show_Data();
        EmptyForm();
        this.CurPersID = PersID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Transactions = new javax.swing.JLabel();
        PersonellID = new javax.swing.JLabel();
        TransID = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TransactionIDTables = new javax.swing.JTable();
        TIDField = new javax.swing.JTextField();
        PersonnelName = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        Cancel = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Search = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TransactionDetails = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(950, 750));
        setResizable(false);
        getContentPane().setLayout(null);

        Transactions.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        Transactions.setText("Sejarah Transaksi");
        getContentPane().add(Transactions);
        Transactions.setBounds(350, 20, 250, 34);

        PersonellID.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        PersonellID.setText("Nama Personalia");
        PersonellID.setMaximumSize(new java.awt.Dimension(118, 26));
        PersonellID.setMinimumSize(new java.awt.Dimension(118, 26));
        PersonellID.setPreferredSize(new java.awt.Dimension(118, 26));
        getContentPane().add(PersonellID);
        PersonellID.setBounds(230, 80, 155, 26);

        TransID.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        TransID.setText("ID Transaksi");
        TransID.setMaximumSize(new java.awt.Dimension(118, 26));
        TransID.setMinimumSize(new java.awt.Dimension(118, 26));
        TransID.setPreferredSize(new java.awt.Dimension(118, 26));
        getContentPane().add(TransID);
        TransID.setBounds(60, 80, 155, 26);

        TransactionIDTables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TransactionIDTables.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TransactionIDTablesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TransactionIDTables);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 170, 769, 168);

        TIDField.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        TIDField.setForeground(new java.awt.Color(204, 204, 204));
        TIDField.setText("ID Transaksi");
        TIDField.setMaximumSize(new java.awt.Dimension(125, 26));
        TIDField.setMinimumSize(new java.awt.Dimension(125, 26));
        TIDField.setName(""); // NOI18N
        TIDField.setPreferredSize(new java.awt.Dimension(125, 26));
        TIDField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TIDFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TIDFieldFocusLost(evt);
            }
        });
        getContentPane().add(TIDField);
        TIDField.setBounds(60, 110, 140, 26);

        PersonnelName.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        PersonnelName.setForeground(new java.awt.Color(204, 204, 204));
        PersonnelName.setText("Nama");
        PersonnelName.setMaximumSize(new java.awt.Dimension(125, 26));
        PersonnelName.setMinimumSize(new java.awt.Dimension(125, 26));
        PersonnelName.setPreferredSize(new java.awt.Dimension(125, 26));
        PersonnelName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PersonnelNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PersonnelNameFocusLost(evt);
            }
        });
        PersonnelName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PersonnelNameActionPerformed(evt);
            }
        });
        getContentPane().add(PersonnelName);
        PersonnelName.setBounds(230, 110, 125, 26);

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jSeparator1.setPreferredSize(new java.awt.Dimension(20000, 2));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 606, 20000, 2);

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        jLabel5.setText("A.S.M.R Advanced Store Management Repository by Goomers Inc. 1993 TM");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(270, 680, 553, 34);

        Cancel.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });
        getContentPane().add(Cancel);
        Cancel.setBounds(600, 110, 110, 33);

        Delete.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        Delete.setText("Hapus");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        getContentPane().add(Delete);
        Delete.setBounds(490, 110, 80, 33);

        Exit.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        Exit.setText("Kembali");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        getContentPane().add(Exit);
        Exit.setBounds(740, 110, 90, 33);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logo2.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 610, 230, 120);

        Search.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        Search.setText("Cari");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        getContentPane().add(Search);
        Search.setBounds(400, 110, 56, 33);

        TransactionDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TransactionDetails);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(60, 350, 769, 200);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TIDFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TIDFieldFocusGained
        if(TIDField.getText().equals("ID Transaksi")) {
            TIDField.setText("");
            TIDField.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_TIDFieldFocusGained

    private void TIDFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TIDFieldFocusLost
        if(TIDField.getText().equals("")) {
            TIDField.setText("ID Transaksi");
            TIDField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_TIDFieldFocusLost

    private void PersonnelNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PersonnelNameFocusGained
        if(PersonnelName.getText().equals("ID Personalia")) {
            PersonnelName.setText("");
            PersonnelName.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_PersonnelNameFocusGained

    private void PersonnelNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PersonnelNameFocusLost
        if(PersonnelName.getText().equals("")) {
            PersonnelName.setText("ID Personalia");
            PersonnelName.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_PersonnelNameFocusLost

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        this.setVisible(false);
        AdminMM Admin = new AdminMM(this.CurPersID);
        Admin.setVisible(true);
    }//GEN-LAST:event_ExitActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        EmptyForm();
        Show_Data();
    }//GEN-LAST:event_CancelActionPerformed

    private void TransactionIDTablesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TransactionIDTablesMouseClicked
        int row = TransactionIDTables.rowAtPoint(evt.getPoint());
        this.rowToDel = row;
        
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Harga");
        model.addColumn("No. Terjual");
        model.addColumn("Subtotal");
        TransactionDetails.setModel(model);
        
        try {
            String SelStm = "SELECT Purchase.ItemID, Inventory.ItemName, Purchase.ItemPriceAtSale, Purchase.PurchaseQty, Purchase.Subtotal FROM Purchase LEFT JOIN Inventory ON Inventory.ItemID = Purchase.ItemID WHERE Purchase.TransactionID='" + TransactionIDTables.getValueAt(row, 0).toString() + "'";
            java.sql.Connection conn = Config.ConfigDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(SelStm);
            
            while(res.next()) {
                model.addRow(new Object[]{res.getString(1), res.getString(2),
                        res.getString(3), res.getString(4), res.getString(5)});
            }
            
            TransactionDetails.setModel(model);
            
        } catch(SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_TransactionIDTablesMouseClicked

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        try {
            String stm = "DELETE FROM Transaction WHERE TransactionID='" + TransactionIDTables.getValueAt(this.rowToDel, 0).toString() + "';";
                
            java.sql.Connection conn = Config.ConfigDB();
            java.sql.PreparedStatement pstm = conn.prepareStatement(stm);
            pstm.execute();
            JOptionPane.showMessageDialog(null, "Delete successful");
            Show_Data();
            EmptyForm();
            
            } catch(HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
    }//GEN-LAST:event_DeleteActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        int FieldsFilled = 0;
        
        List<String> Stms = new ArrayList<>(Arrays.asList("TransactionID LIKE '"+ TIDField.getText() + "',",
                "PersonnelName LIKE '%"+ PersonnelName.getText() + "%',"));
        List<String> Checks = List.of("ID Transaksi", "ID Personalia", "Tanggal/Waktu");
        List<javax.swing.JTextField> Fields = List.of(TIDField, PersonnelName);
        
        for(int i = 0; i < Fields.size(); i++) {
            if(Fields.get(i).getText().equals(Checks.get(i))) {
                Stms.set(i, "");
            } else{
                FieldsFilled++;
            }
        }
        
        
        if(FieldsFilled <= 0) {
            JOptionPane.showMessageDialog(null, "Please fill in at least one field");
        
        } else {
            try {
                String stm = "SELECT * FROM Transaction WHERE ";      
                    stm = Stms.stream().map((i) -> i).reduce(stm, String::concat);
                    stm = stm.substring(0,stm.length() - 1) + ";";
                
                java.sql.Connection conn = Config.ConfigDB();
                java.sql.PreparedStatement pstm = conn.prepareStatement(stm);
                pstm.execute();
                Show_DataStm(stm);
                EmptyForm();
            } catch(HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void PersonnelNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PersonnelNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PersonnelNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transactions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Exit;
    private javax.swing.JLabel PersonellID;
    private javax.swing.JTextField PersonnelName;
    private javax.swing.JButton Search;
    private javax.swing.JTextField TIDField;
    private javax.swing.JLabel TransID;
    private javax.swing.JTable TransactionDetails;
    private javax.swing.JTable TransactionIDTables;
    private javax.swing.JLabel Transactions;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
